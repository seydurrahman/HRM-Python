# Generated by Django 5.2.7 on 2025-11-01 00:38

import django.core.validators
import django.db.models.deletion
import django_countries.fields
import multiselectfield.db.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(max_length=20, unique=True)),
                ('sub_section', models.CharField(blank=True, max_length=100, null=True)),
                ('floor', models.CharField(blank=True, max_length=50, null=True)),
                ('line', models.CharField(blank=True, max_length=50, null=True)),
                ('mobile_number', models.CharField(max_length=15)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='employee_photos/')),
                ('date_of_birth', models.DateField()),
                ('father_name', models.CharField(max_length=100)),
                ('father_name_Bangla', models.CharField(blank=True, max_length=100, null=True)),
                ('mother_name', models.CharField(max_length=100)),
                ('mother_name_Bangla', models.CharField(blank=True, max_length=100, null=True)),
                ('religion', models.CharField(blank=True, max_length=50, null=True)),
                ('nationality', django_countries.fields.CountryField(default='BD', max_length=2)),
                ('nid_number', models.CharField(max_length=50, unique=True)),
                ('nid_image', models.FileField(blank=True, null=True, upload_to='nid_images/')),
                ('birth_Reg', models.CharField(blank=True, max_length=50, null=True)),
                ('birth_Reg_image', models.FileField(blank=True, null=True, upload_to='birth_reg_images/')),
                ('passport_number', models.CharField(blank=True, max_length=50, null=True)),
                ('passport_image', models.FileField(blank=True, null=True, upload_to='passport_images/')),
                ('personal_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('gender', models.CharField(choices=[('MALE', 'Male'), ('FEMALE', 'Female'), ('OTHER', 'Other')], default='Male', max_length=10)),
                ('blood_grp', models.CharField(choices=[('A+', 'A+'), ('B+', 'B+'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('A-', 'A-'), ('B-', 'B-'), ('O+', 'O+'), ('O-', 'O-')], max_length=10)),
                ('marital_status', models.CharField(choices=[('SINGLE', 'Single'), ('MARRIED', 'Married'), ('DIVORCED', 'Divorced'), ('WIDOWED', 'Widowed')], max_length=20)),
                ('country', models.CharField(default='Bangladesh', max_length=100)),
                ('division', models.CharField(max_length=100)),
                ('district', models.CharField(max_length=100)),
                ('thana', models.CharField(max_length=100)),
                ('post_office', models.CharField(max_length=100)),
                ('post_office_Bangla', models.CharField(blank=True, max_length=100, null=True)),
                ('postal_code', models.CharField(max_length=10)),
                ('village', models.CharField(max_length=100)),
                ('address_line', models.CharField(blank=True, max_length=255, null=True)),
                ('address_line_Bangla', models.CharField(blank=True, max_length=255, null=True)),
                ('nominee_name', models.CharField(blank=True, max_length=100, null=True)),
                ('nominee_name_Bangla', models.CharField(blank=True, max_length=100, null=True)),
                ('nominee_relation', models.CharField(blank=True, max_length=50, null=True)),
                ('nominee_mobile', models.CharField(blank=True, max_length=15, null=True)),
                ('nominee_nid', models.CharField(blank=True, max_length=50, null=True)),
                ('nominee_dob', models.DateField(blank=True, null=True)),
                ('nominee_country', models.CharField(blank=True, default='Bangladesh', max_length=100, null=True)),
                ('nominee_division', models.CharField(blank=True, max_length=100, null=True)),
                ('nominee_district', models.CharField(blank=True, max_length=100, null=True)),
                ('nominee_thana', models.CharField(blank=True, max_length=100, null=True)),
                ('nominee_post_office', models.CharField(blank=True, max_length=100, null=True)),
                ('nominee_post_office_Bangla', models.CharField(blank=True, max_length=100, null=True)),
                ('nominee_postal_code', models.CharField(blank=True, max_length=10, null=True)),
                ('nominee_village', models.CharField(blank=True, max_length=100, null=True)),
                ('nominee_photo', models.FileField(blank=True, null=True, upload_to='nominee_photos/')),
                ('nominee_nid_image', models.FileField(blank=True, null=True, upload_to='nominee_nid_images/')),
                ('emergency_contact_name', models.CharField(max_length=100)),
                ('emergency_contact_number', models.CharField(max_length=15)),
                ('emergency_contact_relation', models.CharField(max_length=50)),
                ('local_guardian_name', models.CharField(blank=True, max_length=100, null=True)),
                ('local_guardian_number', models.CharField(blank=True, max_length=15, null=True)),
                ('local_guardian_relation', models.CharField(blank=True, max_length=50, null=True)),
                ('local_guardian_address', models.CharField(blank=True, max_length=255, null=True)),
                ('Indentity_sign', models.CharField(blank=True, max_length=255, null=True)),
                ('weight', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('height', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('blood_group', models.CharField(blank=True, max_length=5, null=True)),
                ('device_id', models.CharField(blank=True, max_length=50, null=True)),
                ('employment_type', models.CharField(choices=[('PERMANENT', 'Permanent'), ('CONTRACT', 'Contract'), ('PART_TIME', 'Part Time'), ('INTERN', 'Intern'), ('PROBATION', 'Probation'), ('MTO', 'Management Trainee Officer')], default='PERMANENT', max_length=20)),
                ('employee_type', models.CharField(choices=[('MANAGEMENT', 'Management'), ('MANAGEMENT_STAFF', 'Management Staff'), ('GENERAL_STAFF', 'General Staff'), ('WORKER', 'Worker')], default='WORKER', max_length=20)),
                ('employee_category', models.CharField(choices=[('OT', 'Overtime'), ('NON_OT', 'Non Overtime')], default='OT', max_length=10)),
                ('group', models.CharField(blank=True, max_length=50, null=True)),
                ('grade', models.CharField(blank=True, max_length=50, null=True)),
                ('date_of_joining', models.DateField()),
                ('date_of_confirmation', models.DateField(blank=True, null=True)),
                ('probation_period_months', models.IntegerField(default=6)),
                ('work_shift', models.CharField(blank=True, choices=[('GENERAL-8', 'General-8'), ('GENERAL-10', 'General-10'), ('GENERAL-12', 'General-12'), ('DAY-8', 'Day-8'), ('DAY-10', 'Day-10'), ('DAY-12', 'Day-12'), ('NIGHT-8', 'Night-8'), ('NIGHT-10', 'Night-10'), ('NIGHT-12', 'Night-12')], default='GENERAL-8', max_length=50, null=True)),
                ('weekend', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('FRIDAY', 'Friday'), ('SATURDAY', 'Saturday'), ('SUNDAY', 'Sunday'), ('MONDAY', 'Monday'), ('TUESDAY', 'Tuesday'), ('WEDNESDAY', 'Wednesday'), ('THURSDAY', 'Thursday')], default='FRIDAY', max_length=50, null=True)),
                ('disburse_type', models.CharField(blank=True, max_length=50, null=True)),
                ('mfs_number', models.CharField(blank=True, max_length=50, null=True)),
                ('work_location', models.CharField(blank=True, max_length=100, null=True)),
                ('bgmea_id', models.CharField(blank=True, max_length=50, null=True)),
                ('bkmea_id', models.CharField(blank=True, max_length=50, null=True)),
                ('bank_name', models.CharField(blank=True, choices=[('DHAKA_BANK', 'Dhaka Bank'), ('BRAC_BANK', 'BRAC Bank'), ('NCC_BANK', 'NCC Bank'), ('CITY_BANK', 'City Bank'), ('STANDARD_CHARTERED', 'Standard Chartered'), ('DUTCH_BANGLA', 'Dutch Bangla'), ('ISLAMIC_BANK', 'Islamic Bank')], max_length=100, null=True)),
                ('bank_account_number', models.CharField(blank=True, max_length=50, null=True)),
                ('bank_branch', models.CharField(blank=True, max_length=100, null=True)),
                ('amount_in_bank', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('tin_number', models.CharField(blank=True, max_length=50, null=True)),
                ('software_user', models.BooleanField(default=False)),
                ('panel_user', models.BooleanField(default=False)),
                ('transport', models.BooleanField(default=False)),
                ('company_name', models.CharField(blank=True, max_length=200, null=True)),
                ('job_title', models.CharField(max_length=100)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('reason_for_leaving', models.CharField(max_length=100)),
                ('experienced', models.CharField(max_length=100)),
                ('experienced_certificate', models.ImageField(null=True, upload_to='')),
                ('remarks', models.CharField(max_length=200)),
                ('salary_policy', models.CharField(max_length=50)),
                ('gross_salary', models.CharField(max_length=100)),
                ('basic_salary', models.CharField(max_length=100)),
                ('house_rent', models.CharField(max_length=100)),
                ('transport_allowance', models.CharField(max_length=100)),
                ('mobile_bill', models.CharField(max_length=100)),
                ('food_allowance', models.CharField(max_length=100)),
                ('medical_allowance', models.CharField(max_length=100)),
                ('other_conveyence', models.CharField(max_length=100)),
                ('attendance_bonus', models.CharField(max_length=100)),
                ('tax_deduction', models.CharField(max_length=100)),
                ('insurance', models.CharField(max_length=100)),
                ('stamp', models.CharField(max_length=100)),
                ('salary_mode', models.CharField(max_length=100)),
                ('pF_applicable', models.BooleanField(default=False)),
                ('late_deduct', models.BooleanField(default=False)),
                ('transport_deduct', models.BooleanField(default=False)),
                ('food_deduct', models.BooleanField(default=False)),
                ('degree_Name', models.CharField(max_length=50)),
                ('institue', models.CharField(max_length=50)),
                ('board', models.CharField(max_length=50)),
                ('subject', models.CharField(max_length=50)),
                ('passing_year', models.CharField(max_length=50)),
                ('result', models.CharField(max_length=50)),
                ('certificate', models.FileField(blank=True, null=True, upload_to='')),
                ('training_name', models.CharField(max_length=100)),
                ('institue_name', models.CharField(max_length=100)),
                ('duration_Month', models.CharField(max_length=50)),
                ('score', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('resignation_date', models.DateField(blank=True, null=True)),
                ('termination_date', models.DateField(blank=True, null=True)),
                ('exit_reason', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_employees', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='employees', to='accounts.department')),
                ('designation', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='employees', to='accounts.designation')),
                ('reporting_manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subordinates', to='employees.employee')),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='employees', to='accounts.section')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='employees', to='accounts.companyunit')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employee_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'employees',
                'ordering': ['-date_of_joining'],
            },
        ),
        migrations.CreateModel(
            name='EducationRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degree_level', models.CharField(choices=[('HIGH_SCHOOL', 'High School'), ('DIPLOMA', 'Diploma'), ('BACHELOR', 'Bachelor'), ('MASTER', 'Master'), ('PHD', 'PhD')], max_length=20)),
                ('degree_title', models.CharField(max_length=200)),
                ('institution', models.CharField(max_length=200)),
                ('field_of_study', models.CharField(max_length=200)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('grade', models.CharField(blank=True, max_length=20)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='education_records', to='employees.employee')),
            ],
            options={
                'db_table': 'education_records',
                'ordering': ['-end_date'],
            },
        ),
        migrations.CreateModel(
            name='Dependent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('relationship', models.CharField(choices=[('SPOUSE', 'Spouse'), ('CHILD', 'Child'), ('PARENT', 'Parent'), ('SIBLING', 'Sibling'), ('OTHER', 'Other')], max_length=20)),
                ('date_of_birth', models.DateField()),
                ('contact_number', models.CharField(blank=True, max_length=15)),
                ('is_emergency_contact', models.BooleanField(default=False)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dependents', to='employees.employee')),
            ],
            options={
                'db_table': 'dependents',
            },
        ),
        migrations.CreateModel(
            name='WorkExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=200)),
                ('job_title', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('responsibilities', models.TextField()),
                ('reason_for_leaving', models.TextField(blank=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_experiences', to='employees.employee')),
            ],
            options={
                'db_table': 'work_experiences',
                'ordering': ['-start_date'],
            },
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['employee_id'], name='employees_employe_0b5eb0_idx'),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['department', 'designation'], name='employees_departm_1ba4c1_idx'),
        ),
    ]

# Generated by Django 4.2.7 on 2025-10-17 15:15

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('employees', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('document_number', models.CharField(blank=True, help_text='Document ID/Reference Number (e.g., Passport Number, License Number)', max_length=100, null=True)),
                ('document_file', models.FileField(help_text='Upload PDF, DOC, or Image files', upload_to='employee_documents/%Y/%m/')),
                ('file_size', models.IntegerField(blank=True, help_text='File size in bytes', null=True)),
                ('file_type', models.CharField(blank=True, max_length=50, null=True)),
                ('issue_date', models.DateField(blank=True, help_text='Date when document was issued', null=True)),
                ('expiry_date', models.DateField(blank=True, help_text='Expiry date of the document', null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('issuing_authority', models.CharField(blank=True, help_text='Organization/Authority that issued the document', max_length=200, null=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('EXPIRED', 'Expired'), ('PENDING_VERIFICATION', 'Pending Verification'), ('VERIFIED', 'Verified'), ('REJECTED', 'Rejected')], default='PENDING_VERIFICATION', max_length=30)),
                ('is_verified', models.BooleanField(default=False)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('verification_notes', models.TextField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_confidential', models.BooleanField(default=False, help_text='Mark as confidential (restricted access)')),
                ('version', models.IntegerField(default=1, help_text='Document version number')),
            ],
            options={
                'db_table': 'documents',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='DocumentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('requires_expiry', models.BooleanField(default=False, help_text='Does this document type have an expiry date?')),
                ('is_mandatory', models.BooleanField(default=False, help_text='Is this document mandatory for all employees?')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Document Category',
                'verbose_name_plural': 'Document Categories',
                'db_table': 'document_categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DocumentTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('template_file', models.FileField(upload_to='document_templates/')),
                ('variables', models.JSONField(blank=True, default=dict, help_text='Template variables in JSON format')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='templates', to='documents.documentcategory')),
            ],
            options={
                'db_table': 'document_templates',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DocumentRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_type', models.CharField(help_text='Type of document requested (e.g., Experience Letter, Salary Certificate)', max_length=100)),
                ('purpose', models.TextField(help_text='Purpose of the document request')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('COMPLETED', 'Completed')], default='PENDING', max_length=20)),
                ('requested_date', models.DateTimeField(auto_now_add=True)),
                ('processed_date', models.DateTimeField(blank=True, null=True)),
                ('processing_notes', models.TextField(blank=True, null=True)),
                ('document_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='documents.documentcategory')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_requests', to='employees.employee')),
                ('generated_document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='request', to='documents.document')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_document_requests', to='employees.employee')),
            ],
            options={
                'db_table': 'document_requests',
                'ordering': ['-requested_date'],
            },
        ),
        migrations.CreateModel(
            name='DocumentReminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminder_date', models.DateField()),
                ('days_before_expiry', models.IntegerField(help_text='Number of days before expiry to send reminder')),
                ('is_sent', models.BooleanField(default=False)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('recipient_email', models.EmailField(max_length=254)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='documents.document')),
            ],
            options={
                'db_table': 'document_reminders',
                'ordering': ['reminder_date'],
            },
        ),
        migrations.AddField(
            model_name='document',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='documents', to='documents.documentcategory'),
        ),
        migrations.AddField(
            model_name='document',
            name='employee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='employees.employee'),
        ),
        migrations.AddField(
            model_name='document',
            name='replaced_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replaces', to='documents.document'),
        ),
        migrations.AddField(
            model_name='document',
            name='uploaded_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_documents', to='employees.employee'),
        ),
        migrations.AddField(
            model_name='document',
            name='verified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_documents', to='employees.employee'),
        ),
        migrations.CreateModel(
            name='DocumentAccessLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('VIEW', 'Viewed'), ('DOWNLOAD', 'Downloaded'), ('UPDATE', 'Updated'), ('DELETE', 'Deleted'), ('VERIFY', 'Verified')], max_length=20)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('accessed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='employees.employee')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access_logs', to='documents.document')),
            ],
            options={
                'db_table': 'document_access_logs',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['document', 'timestamp'], name='document_ac_documen_182f7c_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['employee', 'category'], name='documents_employe_bacc11_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['status'], name='documents_status_f31a08_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['expiry_date'], name='documents_expiry__8f271f_idx'),
        ),
    ]

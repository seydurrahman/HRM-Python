# Generated by Django 5.2.7 on 2025-11-01 00:38

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('employees', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExitType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('requires_notice_period', models.BooleanField(default=True)),
                ('standard_notice_days', models.IntegerField(default=30)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'exit_types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='EmployeeSettlement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('settlement_id', models.CharField(editable=False, max_length=50, unique=True)),
                ('exit_reason', models.CharField(choices=[('RESIGNATION', 'Resignation'), ('RETIREMENT', 'Retirement'), ('TERMINATION', 'Termination'), ('END_OF_CONTRACT', 'End of Contract'), ('MUTUAL_SEPARATION', 'Mutual Separation'), ('DEATH', 'Death'), ('ABSCONDING', 'Absconding'), ('OTHER', 'Other')], default='RESIGNATION', max_length=30)),
                ('exit_reason_details', models.TextField(blank=True, help_text='Detailed reason for exit', null=True)),
                ('resignation_date', models.DateField(blank=True, help_text='Date when resignation was submitted', null=True)),
                ('last_working_date', models.DateField()),
                ('relieving_date', models.DateField(blank=True, help_text='Date when employee was officially relieved', null=True)),
                ('settlement_date', models.DateField()),
                ('required_notice_days', models.IntegerField(default=30)),
                ('actual_notice_days', models.IntegerField(default=0)),
                ('notice_period_served', models.BooleanField(default=False)),
                ('notice_shortfall_days', models.IntegerField(default=0)),
                ('pending_salary', models.DecimalField(decimal_places=2, default=0, help_text='Salary for days worked in final month', max_digits=10)),
                ('leave_encashment', models.DecimalField(decimal_places=2, default=0, help_text='Payment for unused leave days', max_digits=10)),
                ('gratuity', models.DecimalField(decimal_places=2, default=0, help_text='Gratuity payment (if applicable)', max_digits=10)),
                ('notice_pay', models.DecimalField(decimal_places=2, default=0, help_text='Payment in lieu of notice period', max_digits=10)),
                ('bonus_payable', models.DecimalField(decimal_places=2, default=0, help_text='Pending bonus or incentives', max_digits=10)),
                ('overtime_pay', models.DecimalField(decimal_places=2, default=0, help_text='Pending overtime payment', max_digits=10)),
                ('reimbursements', models.DecimalField(decimal_places=2, default=0, help_text='Pending reimbursements', max_digits=10)),
                ('provident_fund_amount', models.DecimalField(decimal_places=2, default=0, help_text='PF balance to be transferred', max_digits=10)),
                ('other_payments', models.DecimalField(decimal_places=2, default=0, help_text='Any other payments', max_digits=10)),
                ('notice_period_recovery', models.DecimalField(decimal_places=2, default=0, help_text='Recovery for notice period shortfall', max_digits=10)),
                ('loan_recovery', models.DecimalField(decimal_places=2, default=0, help_text='Outstanding loan amount', max_digits=10)),
                ('advance_recovery', models.DecimalField(decimal_places=2, default=0, help_text='Salary advance recovery', max_digits=10)),
                ('asset_recovery', models.DecimalField(decimal_places=2, default=0, help_text='Cost of unreturned company assets', max_digits=10)),
                ('training_bond_penalty', models.DecimalField(decimal_places=2, default=0, help_text='Training bond penalty (if applicable)', max_digits=10)),
                ('damage_compensation', models.DecimalField(decimal_places=2, default=0, help_text='Compensation for damages', max_digits=10)),
                ('tax_deduction', models.DecimalField(decimal_places=2, default=0, help_text='Tax deduction on settlement', max_digits=10)),
                ('other_deductions', models.DecimalField(decimal_places=2, default=0, help_text='Any other deductions', max_digits=10)),
                ('total_payable', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_deductible', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('net_settlement_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_leave_balance', models.DecimalField(decimal_places=1, default=0, help_text='Total unused leave days', max_digits=5)),
                ('encashable_leave_days', models.DecimalField(decimal_places=1, default=0, max_digits=5)),
                ('status', models.CharField(choices=[('INITIATED', 'Initiated'), ('PENDING', 'Pending'), ('CALCULATED', 'Calculated'), ('APPROVED', 'Approved'), ('PAID', 'Paid'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='INITIATED', max_length=20)),
                ('calculated_at', models.DateTimeField(blank=True, null=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('payment_mode', models.CharField(blank=True, help_text='Mode of payment (Bank Transfer, Cheque, etc.)', max_length=50, null=True)),
                ('payment_reference', models.CharField(blank=True, help_text='Payment transaction reference', max_length=100, null=True)),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('internal_notes', models.TextField(blank=True, help_text='Internal notes (not visible to employee)', null=True)),
                ('settlement_letter', models.FileField(blank=True, null=True, upload_to='settlement_documents/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_settlements', to='employees.employee')),
                ('calculated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='calculated_settlements', to='employees.employee')),
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settlement', to='employees.employee')),
                ('exit_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='settlement.exittype')),
            ],
            options={
                'db_table': 'employee_settlements',
                'ordering': ['-settlement_date'],
            },
        ),
        migrations.CreateModel(
            name='ClearanceChecklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department_name', models.CharField(max_length=100)),
                ('clearance_item', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('IN_PROGRESS', 'In Progress'), ('CLEARED', 'Cleared'), ('ON_HOLD', 'On Hold')], default='PENDING', max_length=20)),
                ('cleared_date', models.DateField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cleared_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clearances_given', to='employees.employee')),
                ('settlement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clearances', to='settlement.employeesettlement')),
            ],
            options={
                'db_table': 'clearance_checklists',
                'ordering': ['department_name'],
            },
        ),
        migrations.CreateModel(
            name='AssetReturn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_name', models.CharField(max_length=200)),
                ('asset_code', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True)),
                ('issued_date', models.DateField(blank=True, null=True)),
                ('expected_return_date', models.DateField()),
                ('actual_return_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('RETURNED', 'Returned'), ('DAMAGED', 'Damaged'), ('LOST', 'Lost'), ('NOT_APPLICABLE', 'Not Applicable')], default='PENDING', max_length=20)),
                ('condition', models.TextField(blank=True, help_text='Condition of returned asset')),
                ('recovery_amount', models.DecimalField(decimal_places=2, default=0, help_text='Recovery amount if damaged/lost', max_digits=10)),
                ('remarks', models.TextField(blank=True)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_asset_returns', to='employees.employee')),
                ('settlement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asset_returns', to='settlement.employeesettlement')),
            ],
            options={
                'db_table': 'asset_returns',
                'ordering': ['expected_return_date'],
            },
        ),
        migrations.CreateModel(
            name='ExitInterview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interview_date', models.DateField()),
                ('reason_for_leaving', models.TextField()),
                ('job_satisfaction_rating', models.IntegerField(blank=True, help_text='Rating from 1-10', null=True)),
                ('work_environment_rating', models.IntegerField(blank=True, null=True)),
                ('management_rating', models.IntegerField(blank=True, null=True)),
                ('career_growth_rating', models.IntegerField(blank=True, null=True)),
                ('compensation_rating', models.IntegerField(blank=True, null=True)),
                ('would_recommend_company', models.BooleanField(blank=True, help_text='Would recommend company to others?', null=True)),
                ('would_consider_rejoining', models.BooleanField(blank=True, help_text='Would consider rejoining in future?', null=True)),
                ('positive_aspects', models.TextField(blank=True)),
                ('areas_for_improvement', models.TextField(blank=True)),
                ('suggestions', models.TextField(blank=True)),
                ('additional_comments', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('interviewed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conducted_exit_interviews', to='employees.employee')),
                ('settlement', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='exit_interview', to='settlement.employeesettlement')),
            ],
            options={
                'db_table': 'exit_interviews',
            },
        ),
        migrations.CreateModel(
            name='SettlementDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('RESIGNATION_LETTER', 'Resignation Letter'), ('RELIEVING_LETTER', 'Relieving Letter'), ('EXPERIENCE_CERTIFICATE', 'Experience Certificate'), ('NOC', 'No Objection Certificate'), ('FORM_16', 'Form 16'), ('SETTLEMENT_LETTER', 'Settlement Letter'), ('OTHER', 'Other')], max_length=30)),
                ('document_file', models.FileField(upload_to='settlement_documents/')),
                ('description', models.TextField(blank=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('settlement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='settlement.employeesettlement')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='employees.employee')),
            ],
            options={
                'db_table': 'settlement_documents',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.AddIndex(
            model_name='employeesettlement',
            index=models.Index(fields=['employee', 'status'], name='employee_se_employe_cc9fef_idx'),
        ),
        migrations.AddIndex(
            model_name='employeesettlement',
            index=models.Index(fields=['settlement_date'], name='employee_se_settlem_9a8d30_idx'),
        ),
    ]
